model User {
    id                 String     @id @default(uuid())
    email              String     @unique
    password           String
    role               UserRole   @default(PATIENT)
    needPasswordChange Boolean    @default(true)
    status             UserStatus @default(ACTIVE)
    createdAt          DateTime   @default(now())
    updatedAt          DateTime   @updatedAt

    admin    Admin?
    Doctor   Doctor?
    Patients Patients?

    @@map("users")
}

model Admin {
    id            String   @id @default(uuid())
    name          String
    email         String   @unique
    profilePhoto  String?
    contactNumber String
    isDeleted     Boolean  @default(false)
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    user          User     @relation(fields: [email], references: [email])

    @@map("admin")
}

model Doctor {
    id                  String   @id @default(uuid())
    name                String
    email               String   @unique
    profilePhoto        String?
    contactNumber       String
    address             String
    registrationNumber  String
    experience          Int      @default(0)
    gender              Gender
    appointmentFee      Int
    qualification       String
    currentWorkingPlace String
    designation         String
    isDeleted           Boolean  @default(false)
    createdAt           DateTime @default(now())
    updatedAt           DateTime @updatedAt
    user                User     @relation(fields: [email], references: [email])

    @@map("doctors")
}

model Patients {
    id            String   @id @default(uuid())
    name          String
    email         String   @unique
    profilePhoto  String?
    contactNumber String
    address       String
    isDeleted     Boolean  @default(false)
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    user          User     @relation(fields: [email], references: [email])

    @@map("patients")
}
